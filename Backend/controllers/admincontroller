const User = require('../models/user');
const Task = require('../models/Task');
const mongoose = require('mongoose');

//get user details and their tasks
exports.userDetails = async (req, res) => {
  try {
    const userId  = req.params.id; // user ID from URL  
    const userDetails = await User.findById(userId).select('-password -verificationCode -resetCode -refreshToken');
    const userTasks = await Task.find({ userId: userId });
    if (!userDetails) {
      return res.status(404).json({ message: 'User not found' });
    }
    res.status(200).json({ user: userDetails, tasks: userTasks });
  } catch (error) {
    console.error('Error fetching user details:', error);
    res.status(500).json({ message: 'Server error' });
  }
};


 //get tasks within date range
 exports.filterTasksByDate = async (req, res) => {
  try {
    const { startDate, endDate } = req.query;
    const userId = req.params.id;
    console.log("user id issssss------------->",userId)
    if (!startDate || !endDate) {
      return res.status(400).json({ message: 'startDate and endDate query parameters are required' });
    } 
    console.log("testingggg------------->")
    const start = new Date(startDate);
    const end = new Date(endDate);
    end.setUTCHours(23, 59, 59, 999); // Include the entire end date in the filter

    console.log("start date issssss------------->",start)
    console.log("end date issssss------------->",end)

   

    const tasks = await Task.find({
      userId: userId,
      createdAt: { $gte: start, $lte: end },
      priority: 'low'
    });
    res.status(200).json({ tasks });
  } catch (error) {
    console.error('Error filtering tasks by date:', error);
    res.status(500).json({ message: 'Server error' });
  }
};

